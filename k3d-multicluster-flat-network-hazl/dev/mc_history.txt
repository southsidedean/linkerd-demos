 1073  ./cluster_create.sh
 1074  k3d cluster list
 1075  kubectx
 1076  helm repo add linkerd-buoyant https://helm.buoyant.cloud\nhelm repo update
 1077  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context orders \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1078  source settings.sh
 1079  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context orders \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1080  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context warehouse \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1081  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context warehouse \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1082  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context warehouse \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1083  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context orders \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1084  linkerd --context=orders multicluster check
 1085  linkerd --context=warehouse multicluster check
 1086  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | kubectl --context=orders apply -f -
 1087  kubectl get links -A --context=orders
 1088  kubectl get svc -A --context=orders
 1089  kubectl get svc -A --context=warehouse
 1090  kubectl --context=warehouse label svc -n orders fulfillment mirror.linkerd.io/exported=true
 1091  kubectl --context=warehouse label svc -n orders fulfillment mirror.linkerd.io/exported=true --overwrite
 1092  kubectl get svc -A --context=warehouse
 1093  kubectl get svc -A --context=warehouse
 1094  kubectl get svc -A --context=orders
 1095  kubectl get svc -A --context=orders
 1096  kubectl get svc -A --context=orders
 1097  kubectl get svc -A --context=orders
 1098  linkerd --context=orders multicluster link --cluster-name orders --gateway=false | kubectl --context=warehouse apply -f -
 1099  kubectl get svc -A --context=orders
 1100  kubectl get svc -A --context=orders
 1101  kubectl get svc -A --context=warehouse
 1102  kubectl get svc -A --context=orders
 1103  kubectl get links -A --context=orders
 1104  kubectl get links -A --context=warehouse
 1105  kubectl get links -A --context=orders
 1106  kubectl get svc -A --context=orders
 1107  kubectl get svc -A --context=orders
 1108  ls -al
 1109  cp linkerd-data-plane-config.yaml linkerd-data-plane-multicluster.config.yaml
 1110  mv linkerd-data-plane-multicluster.config.yaml linkerd-data-plane-multicluster-config.yaml
 1111  vi linkerd-data-plane-multicluster-config.yaml
 1112  kubectl apply -f linkerd-data-plane-multicluster-config.yaml --context= orders
 1113  kubectl apply -f linkerd-data-plane-multicluster-config.yaml --context=orders
 1114  kubectl apply -f linkerd-data-plane-multicluster-config.yaml --context=warehouse
 1115  git pull
 1116  kubectl get ns
 1117  kubectl get ns --context orders
 1118  kubectl get ns --context warehouse
 1119  kubectl get svc -A --context=orders
 1120  kubectl get svc -A --context=warehouse
 1121  kubectl --context=warehouse label svc -n orders fulfillment mirror.linkerd.io/exported=remote-discovery --overwri
 1122  kubectl --context=warehouse label svc -n orders fulfillment mirror.linkerd.io/exported=remote-discovery --overwrite
 1123  kubectl get svc -A --context=orders
 1124  kubectl get svc -A --context=orders
 1125  kubectl get svc -A --context=orders
 1126  kubectl get svc -A --context=warehouse
 1127  kubectl get svc -A --context=orders
 1128  kubectl get svc -A --context=orders
 1129  kubectl get svc fulfillment --context warehouse -o yaml
 1130  kubectl get svc --context warehouse -o yaml
 1131  kubectl get svc --context warehouse
 1132  kubectl get svc --context warehouse -n orders
 1133  kubectl get svc fulfillment --context warehouse -n orders -o yaml
 1134  kubectl rollout restart deploy warehouse -n orders --context warehouse
 1135  kubectl rollout restart deploy -n orders --context warehouse
 1136  kubectl get svc -A --context=orders
 1137  kubectl get svc -A --context=orders
 1138  kubectl rollout restart deploy -n orders --context orders
 1139  kubectl get svc -A --context=orders
 1140  kubectl get svc -A --context=orders
 1141  kubectl get svc -A --context=orders
 1142  kubectl get all -A --context warehouse
 1143  kubectl logs linkerd-service-mirror-orders-69fc567fd7 -n linkerd-multicluster --context warehouse
 1144  kubectl get all -A --context warehouse
 1145  kubectl logs linkerd-service-mirror-orders-69fc567fd7 -n linkerd-multicluster --context warehouse
 1146  kubectl logs linkerd-service-mirror-orders-69fc567fd7-8kggd -n linkerd-multicluster --context warehouse
 1147  kubectl logs linkerd-service-mirror-orders-69fc567fd7-8kggd -n linkerd-multicluster --context warehouse -c service-mirror
 1148  kubectl logs linkerd-service-mirror-orders-69fc567fd7-8kggd -n linkerd-multicluster --context warehouse -c service-mirror | more
 1149  kubectl logs linkerd-service-mirror-orders-69fc567fd7-8kggd -n linkerd-multicluster --context orders -c service-mirror | more
 1150  kubectl get all -n linkerd-multicluster --context orders
 1151  kubectl logs linkerd-service-mirror-warehouse-5465647947-7w2lc -n linkerd-multicluster --context orders -c service-mirror | more
 1152  cat dev/history_* | grep unlink
 1153  linkerd multicluster unlink --cluster-name warehouse --context=warehouse | kubectl --context=orders apply -f -
 1154  linkerd multicluster unlink --cluster-name warehouse --context=warehouse --namespace linkerd-multicluster| kubectl --context=orders apply -f -
 1155  linkerd multicluster unlink --cluster-name warehouse --context=warehouse --namespace linkerd-multicluster | kubectl --context=orders apply -f -
 1156  cat dev/history_* | grep unlink
 1157  linkerd multicluster unlink --cluster-name warehouse --context=warehouse --namespace linkerd-multicluster | kubectl --context=orders delete -f -
 1158  linkerd multicluster unlink --cluster-name warehouse --context=warehouse --namespace linkerd-multicluster
 1159  linkerd multicluster unlink --cluster-name warehouse --context warehouse --namespace linkerd-multicluster
 1160  linkerd multicluster unlink --cluster-name orders --context orders --namespace linkerd-multicluster
 1161  linkerd multicluster unlink --help
 1162  linkerd multicluster unlink --cluster-name orders --context warehouse --namespace linkerd-multicluster
 1163  linkerd multicluster unlink --cluster-name orders --context warehouse --namespace linkerd-multicluster | kubectl delete -f - --context warehouse
 1164  linkerd multicluster unlink --cluster-name warehouse --context orders --namespace linkerd-multicluster | kubectl delete -f - --context orders
 1165  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | kubectl --context=orders apply -f -
 1166  kubectl get links -A --context=orders
 1167  kubectl get svc -A --context=orders
 1168  kubectl get svc -A --context=warehouse
 1169  kubectl logs linkerd-service-mirror-warehouse-5465647947-7w2lc -n linkerd-multicluster --context orders -c service-mirror | more
 1170  ./cluster_destroy.sh
 1171  git pull
 1172  git pull
 1173  more cluster_create.sh
 1174  git pull
 1175  git pull
 1176  git pull
 1177  ./cluster_create.sh
 1178  ./cluster_destroy.sh
 1179  git pull
 1180  ./cluster_create.sh
 1181  kubectx
 1182  cat ~/.kube/config
 1183  vi ~/.kube/config
 1184  cat ~/.kube/config
 1185  kubectl get nodes --context orders
 1186  kubectl get nodes --context warehouse
 1187  kubectl get nodes --context orders
 1188  kubectl get nodes --context warehouse
 1189  kubectl get nodes --context orders -o wide'
 1190  kubectl get nodes --context orders -o wide
 1191  kubectl get nodes --context warehouse -o wide
 1192  grep 0.0.0.0 ~/.kube/config
 1193  docker ps -a
 1194  docker ps --help
 1195  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context orders \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1196  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context warehouse \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1197  linkerd --context=orders multicluster check
 1198  linkerd --context=warehouse multicluster check
 1199  kubectl get svc fulfillment -n orders -o yaml
 1200  kubectl describe svc fulfillment -n orders -o yaml
 1201  kubectl get svc fulfillment -n orders -o yaml --context warehouse
 1202  cat orders/warehouse/server.yaml
 1203  kubectl get svc -A --context=orders
 1204  kubectl get svc -A --context=warehouse
 1205  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false
 1206  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep 0.0.0.0
 1207  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep server
 1208  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false
 1209  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64
 1210  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d
 1211  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d > warehouse_config.txt
 1212  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -i `s/server:\ https:\/\/0.0.0.0/server:\ https:\/\/host.docker.internal
 1213  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -i `s/server:\ https:\/\/0.0.0.0/server:\ https:\/\/host.docker.internal'
 1214  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -i 's/server:\ https:\/\/0.0.0.0/server:\ https:\/\/host.docker.internal'
 1215  man sed
 1216  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -i 's/0.0.0.0/host.docker.internal'
 1217  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed 's/0.0.0.0/host.docker.internal'
 1218  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0.0.0.0/host.docker.internal'
 1219  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed "s/0.0.0.0/host.docker.internal"
 1220  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0.0.0.0/"host.docker.internal"'
 1221  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0.0.0.0/"host.docker.internal"'
 1222  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's|/'0.0.0.0'/'host.docker.internal'|g'
 1223  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/host.docker.internal/g'
 1224  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/host.docker.internal/g' | base64 | tr -d '/n'
 1225  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false
 1226  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > warehouse_config.txt
 1227  vi warehouse_config.txt
 1228  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/host.docker.internal/g' | base64 | tr -d '/n'
 1229  vi warehouse_config.txt
 1230  mv warehouse_config.txt warehouse_config.yaml
 1231  kubectl apply -f warehouse_config.yaml
 1232  kubectl delete -f warehouse_config.yaml
 1233  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/host.docker.internal/g' | base64 | tr -d '\n'
 1234  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/host.docker.internal/g' | base64 | tr -d '\n'
 1235  vi warehouse_config.yaml
 1236  kubectl apply -f warehouse_config.yaml
 1237  kubectl get svc -A --context orders
 1238  kubectl get svc -A --context orders
 1239  kubectl get svc -A --context warehouse
 1240  kubectl get all -n linkerd-multicluster --context orders
 1241  kubectl logs linkerd-service-mirror-warehouse-5465647947-5vr4c -n linkerd-multicluster -c service-mirror
 1242  kubectl edit cm coredns -n kube-system
 1243  linkerd multicluster delete --help
 1244  linkerd multicluster delete link --help
 1245  linkerd multicluster unlink --help
 1246  kubectl edit cm coredns -n kube-system
 1247  kubectl get pod -n kube-system
 1248  kubectl get all -n kube-system
 1249  kubectl rollout restart deploy coredns -n kube-system --context orders
 1250  kubectl get all -n kube-system
 1251  kubectl logs linkerd-service-mirror-warehouse-5465647947-5vr4c -n linkerd-multicluster -c service-mirror
 1252  cat ~/.kube/config
 1253  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d
 1254  kubectl edit cm coredns -n kube-system
 1255  kubectl logs linkerd-service-mirror-warehouse-5465647947-5vr4c -n linkerd-multicluster -c service-mirror
 1256  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/localhost/g' | base64 | tr -d '\n'
 1257  vi warehouse_config.yaml
 1258  kubectl apply -f warehouse_config.yaml
 1259  kubectl rollout restart -n linkerd-multicluster deploy --context orders
 1260  kubectl edit cm coredns -n kube-system
 1261  kubectl rollout restart deploy coredns -n kube-system --context orders
 1262  kubectl logs linkerd-service-mirror-warehouse-5465647947-5vr4c -n linkerd-multicluster -c service-mirror
 1263  kubectl get all -n linkerd-multicluster
 1264  kubectl logs linkerd-service-mirror-warehouse-688d96789f-fgxm9 -n linkerd-multicluster -c service-mirror
 1265  kubectl edit cm coredns -n kube-system
 1266  kubectl rollout restart deploy coredns -n kube-system --context orders
 1267  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/kubernetes/g' | base64 | tr -d '\n'
 1268  vi warehouse_config.yaml
 1269  kubectl rollout restart -n linkerd-multicluster deploy --context orders
 1270  kubectl get all -n linkerd-multicluster
 1271  kubectl logs linkerd-service-mirror-warehouse-6f8cbdd498-tbnjr -n linkerd-multicluster -c service-mirror
 1272  kubectl edit cm coredns -n kube-system
 1273  vi warehouse_config.yaml
 1274  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/kubernetes/g' | base64 | tr -d '\n'
 1275  kubectl apply -f warehouse_config.yaml
 1276  kubectl rollout restart -n linkerd-multicluster deploy --context orders
 1277  kubectl get all -n linkerd-multicluster
 1278  kubectl logs linkerd-service-mirror-warehouse-5c66965fcb-kjj8r -n linkerd-multicluster -c service-mirror
 1279  kubectl get svc -n orders --context orders
 1280  kubectl logs linkerd-service-mirror-warehouse-5c66965fcb-kjj8r -n linkerd-multicluster -c service-mirror
 1281  grep fulfillment orders/orders/orders-*
 1282  kubectl get svc -n orders --context orders
 1283  vi service-mirror.yaml
 1284  kubectl get svc -n orders --context orders
 1285  vi service-mirror.yaml
 1286  vi service-mirror.yaml
 1287  kubectl apply -f service-mirror.yaml --context orders
 1288  vi service-mirror.yaml
 1289  kubectl get sa -n linkerd-buoyant
 1290  vi service-mirror.yaml
 1291  kubectl apply -f service-mirror.yaml --context orders
 1292  kubectl apply -f service-mirror.yaml --context warehouse
 1293  vi policy.yaml
 1294  kubectl apply -f policy.yaml --context orders
 1295  kubectl apply -f policy.yaml --context warehouse
 1296  kubectl rollout restart ds -n linkerd-buoyant
 1297  kubectl rollout restart deploy -n linkerd-buoyant
 1298  cd cluster
 1299  ls -al
 1300  cd ..
 1301  vi test-pod.yaml
 1302  kubectl apply -f test-pod.yaml --context orders
 1303  kubectl get pod
 1304  kubectl exec client-945b9886c-ws5cj -- sh
 1305  kubectl exec client-945b9886c-ws5cj -- /bin/bash
 1306  kubectl exec client-945b9886c-ws5cj -- /bash
 1307  kubectl exec client-945b9886c-ws5cj -- sh -c curl
 1308  kubectl exec client-945b9886c-ws5cj -c client -- sh
 1309  kubectl exec client-945b9886c-ws5cj -c curl -- sh
 1310  kubectl exec -it client-945b9886c-ws5cj -c curl -- sh
 1311  kubectl get pod -n orders --context warehours
 1312  kubectl get pod -n orders --context warehouse
 1313  kubectl get pod -n orders --context warehouse -o wide
 1314  kubectl exec -it client-945b9886c-ws5cj -c curl -- sh
 1315  kubectl get pods -n --context orders
 1316  kubectl get pods -n orders --context orders
 1317  kubectl get pods -n orders --context orders -o wide
 1318  kubectl get avc -n orders --context warehouse -o wide
 1319  kubectl get svc -n orders --context warehouse
 1320  kubectl get svc -n orders --context orders
 1321  kubectl logs orders-central-768c6596b5-fz6m6 -n orders -c brush --context orders
 1322  kubectl logs orders-central-768c6596b5-fz6m6 -n orders --context orders
 1323  kubectl logs orders-central-768c6596b5-fz6m6 -n orders --context orders | more
 1324  kubectl get svc -n orders --context warehouse
 1325  kubectl get svc -n orders --context orders
 1326  kubectl describe svc fulfillment -n orders --context warehouse
 1327  linkerd dg endpoints svc/fulfillment-warehouse -n orders --context orders
 1328  linkerd dg endpoints fulfillment-warehouse.orders.svc --context orders
 1329  linkerd dg endpoints fulfillment-warehouse.orders.svc:80 --context orders
 1330  kubectl logs orders-central-768c6596b5-fz6m6 -n orders --context orders | more
 1331  linkerd dg endpoints fulfillment-warehouse.orders.svc:80 --context orders
 1332  kubectl get pods -n orders --context warehouse
 1333  kubectl logs warehouse-chicago-7b8d4c46fb-kn7lz -n orders --context warehouse
 1334  kubectl get nodes --context orders
 1335  kubectl get nodes --context orders -o iwde
 1336  kubectl get nodes --context orders -o wide
 1337  kubectl get svc -n orders --context warehouse -o yaml
 1338  kubectl get secret -A --context orders
 1339  kubectl get secret cluster-credentials-warehouse -n linkerd -o yaml
 1340  base64 -d YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo=
 1341  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d
 1342  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/kubernetes/g' | base64 | tr -d '\n'
 1343  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMC4wLjAuMDo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d | sed -u 's/0\.0\.0\.0/kubernetes/g' | base64 | tr -d '\n'
 1344  echo YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRWUkpNMDU2YXpOT2VsRjNTR2hqVGsxcVVYZE9SRVYzVFdwQmQwOVVUVEJYYUdOT1RYcFJkMDVFUVRSTmFrRjNUMVJOTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVlJKTTA1NmF6Tk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZUTm1KSk9EUkxOVUphZWpFdlRtZHRTbGR4V25kWGEwRkROMVUzVEdGaE9GSTJZemc0Vkc5Tk9IWUtkRmgwU2t0MGNUbDNjRmhMWVVjd1QwUldRelE1VlUweU5ISTRPSEZSWW1odGMzRmhVMFZQWkc1NlNUWnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVGhzV1dRM1JtMVhWVXhJZUdFMGFVa3hWazVFQ2xCMFpIbExWbFYzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG5VRlZETDFWbE1qSldaMFoxWkRSQ1VXNHlaalF3Um1weFYxRnlOWGMzU0cwS2RsVnJhV3BaVDNSeVowbERTVkZEVW1GRlpFVlZSR2MxZWxscFJucGpkVlJZU1VRclV5OU5TVTlwYmxwUldHOUpZVWRLTUVsQlJVSlNRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8va3ViZXJuZXRlczo1Mzc5OQogIG5hbWU6IGszZC13YXJlaG91c2UKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGszZC13YXJlaG91c2UKICAgIHVzZXI6IGxpbmtlcmQtc2VydmljZS1taXJyb3ItcmVtb3RlLWFjY2Vzcy1kZWZhdWx0CiAgbmFtZTogd2FyZWhvdXNlCmN1cnJlbnQtY29udGV4dDogd2FyZWhvdXNlCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogbGlua2VyZC1zZXJ2aWNlLW1pcnJvci1yZW1vdGUtYWNjZXNzLWRlZmF1bHQKICB1c2VyOgogICAgdG9rZW46IGV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbVYwWkVFMGJGbzNja2hOZW5GNE1tcEJSbVpOVkdkRFJURkdRelpvZVVkMGJGSklRWEJ1TWpoUFUyc2lmUS5leUpwYzNNaU9pSnJkV0psY201bGRHVnpMM05sY25acFkyVmhZMk52ZFc1MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl1WVcxbGMzQmhZMlVpT2lKc2FXNXJaWEprTFcxMWJIUnBZMngxYzNSbGNpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnNhVzVyWlhKa0xYTmxjblpwWTJVdGJXbHljbTl5TFhKbGJXOTBaUzFoWTJObGMzTXRaR1ZtWVhWc2RDMTBiMnRsYmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKc2FXNXJaWEprTFhObGNuWnBZMlV0YldseWNtOXlMWEpsYlc5MFpTMWhZMk5sYzNNdFpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1SbFpEWTVNR1EwTFdNM056TXROREUxWVMxaE0yWTFMVGRoTjJFMFpXTmlPR1k1TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHNhVzVyWlhKa0xXMTFiSFJwWTJ4MWMzUmxjanBzYVc1clpYSmtMWE5sY25acFkyVXRiV2x5Y205eUxYSmxiVzkwWlMxaFkyTmxjM010WkdWbVlYVnNkQ0o5Lmw5MUtxRXlVOWI2TmYtQmU5R0ZCRVd2OGV3YjZMdTlYaUgyeGJfTGhuUVNBaDJPb0ZrZjN1OGNQMzVHenFNY2dvZXZpcVhTTTY4dEdhcEQ4YWRQUWNZN2tzVF82MWkxaldCNlI5U2YzUXA2d0t1eVFnbjZzNFBBX0NZcjYzNldmODM3cl9ydVlHeUhvN2ppQll6VGVuckdXQnR2aUVjMzhxMlM4OGdhbW1UVGdBd1pCNzJKVFAyWHJFeGVkUXhRM0JNeVVmMU5GNVg0bU5vcG1TS0c3aEVWb2JveFVtMml6WVRBVHRLcmVCS1RVOHhYcDl3bEhxT0VWam9GSmVzYzFZTHpXZDBQc3pLNGdqcHlDc0xOcUs0QUR2TjVocjNqSjY1SmNwSE5SYTI2LXZRNGZZaTRxZGswNThaYWJUcElVNUZ4aHJTZGdEemdNUHVYSGJhRzJYdwo= | base64 -d
 1345  kubectl edit secret cluster-credentials-warehouse -n linkerd --context orders
 1346  kubectl rollout restart deploy -n linkerd --context orders
 1347  kubectl rollout restart deploy -n ordres --context orders
 1348  kubectl rollout restart deploy -n orders --context orders
 1349  history 1 | grep multicluster | grep link
 1350  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false
 1351  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig:
 1352  kubectl get cm coredns -n kube-system
 1353  kubectl get cm coredns -n kube-system -o yaml --context orders
 1354  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1355  kubectl get cm coredns -n kube-system -o yaml --context orders > coredns.yaml
 1356  kubectl edit cm coredns -n kube-system -o yaml --context orders
 1357  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1358  ls -al
 1359  more policy.yaml
 1360  more se
 1361  more service-mirror.yaml
 1362  ip addr
 1363  ifconfig -a
 1364  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1365  host host.docker.internal
 1366  host 192.168.65.254
 1367  history
 1368  history 1000
 1369  history 800
 1370  history 1073 > mc_history.txt
 1371  more mc_history.txt
 1372  ./cluster_destroy.sh
 1373  ./cluster_create.sh
 1374  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1375  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml > coredns.yaml
 1376  sed -i 's/host.k3d.internal/host.k3d.internal\ kubernetes/g' coredns.yaml
 1377  sed --help
 1378  man sed
 1379  sed -i orig 's/host.k3d.internal/host.k3d.internal\ kubernetes/g' coredns.yaml
 1380  ls -la
 1381  rm coredns.yaml*
 1382  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml > coredns.yaml
 1383  sed -i .orig 's/host.k3d.internal/host.k3d.internal\ kubernetes/g' coredns.yaml
 1384  more coredns.yaml
 1385  kubectl apply -f coredns.yaml -n kube-system --context orders
 1386  more coredns.yaml
 1387  kubectl apply -f coredns.yaml -n kube-system --context orders
 1388  rm coredns.yaml*
 1389  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1390  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml | grep -Ev "creationTimestamp|resourceVersion|uid"
 1391  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml | grep -Ev "creationTimestamp|resourceVersion|uid" > coredns.yaml
 1392  sed -i .orig 's/host.k3d.internal/host.k3d.internal\ kubernetes/g' coredns.yaml
 1393  ls -la
 1394  kubectl apply -f coredns.yaml -n kube-system --context orders
 1395  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1396  kubectl edit cm coredns -n kube-system -o yaml --context orders -o yaml
 1397  rm coredns.yaml*
 1398  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml | grep -Ev "creationTimestamp|resourceVersion|uid" > coredns.yaml
 1399  sed -i .orig 's/host.k3d.internal/host.k3d.internal\ kubernetes/g' coredns.yaml
 1400  kubectl apply -f coredns.yaml -n kube-system --context orders
 1401  kubectl get cm coredns -n kube-system -o yaml --context orders -o yaml
 1402  kubectl rollout restart deploy coredns -n kube-system --context orders
 1403  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context orders \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1404  helm install linkerd-multicluster \\n  --create-namespace \\n  --namespace linkerd-multicluster \\n  --kube-context warehouse \\n  --set linkerd-multicluster.gateway.enabled=false \\n  --set license=$BUOYANT_LICENSE \\n  linkerd-buoyant/linkerd-enterprise-multicluster
 1405  linkerd --context=orders multicluster check
 1406  linkerd --context=warehouse multicluster check
 1407  history 1073 > mc_history.txt
 1408  cat mc_history.txt
 1409  cat mc_history.txt | grep "linkerd multicluster link"
 1410  cat mc_history.txt | grep "linkerd multicluster"
 1411  cat mc_history.txt | grep "multicluster"
 1412  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false
 1413  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig:
 1414  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq
 1415  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}
 1416  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster_link.yaml
 1417  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` sed -i .orig 's/$KC/`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64`/g'
 1418  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` sed -i .orig 's/$KC/`echo $KC | base64 -d | sed "s/0\.0\.0\.0/kubernetes/g" | base64`/g'
 1419  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` sed -i .orig "s/$KC/`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64`/g"
 1420  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; sed -i .orig "s/$KC/`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64`/g"
 1421  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC $KC2
 1422  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC "Stirng 2: "$KC2
 1423  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC /n "String 2: "$KC2
 1424  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC \/n "String 2: "$KC2
 1425  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC'/n'"String 2: "$KC2
 1426  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC'/n''/n'"String 2: "$KC2
 1427  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo "String 1: "$KC "Stirng 2: "$KC2
 1428  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC $KC2
 1429  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC ; echo $KC2
 1430  KC=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC ; echo ; echo $KC2
 1431  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s/$KC1/$KC2/g" multicluster_link.yaml
 1432  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's/$KC1/$KC2/g' multicluster_link.yaml
 1433  ls -la
 1434  more multicluster_link.yaml
 1435  diff multicluster_link.yaml multicluster_link.yaml.orig
 1436  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's|$KC1|$KC2|g' multicluster_link.yaml
 1437  diff multicluster_link.yaml multicluster_link.yaml.orig
 1438  rm multicluster_link.yaml*
 1439  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster_link.yaml
 1440  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's|$KC1|$KC2|g' multicluster_link.yaml
 1441  diff multicluster_link.yaml multicluster_link.yaml.orig
 1442  ls -al multicluster_link.yaml
 1443  ls -al multicluster_link.yaml*
 1444  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's|$KC1|$KC2|g' multicluster_link.yaml
 1445  diff multicluster_link.yaml multicluster_link.yaml.orig
 1446  ls -al multicluster_link.yaml*
 1447  more multicluster_link.yaml
 1448  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster_link.yaml
 1449  more multicluster_link.yaml
 1450  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's/$KC1/$KC2/g' multicluster_link.yaml
 1451  diff multicluster_link.yaml multicluster_link.yaml.orig
 1452  ls -al multicluster_link.yaml*
 1453  grep kubeconfig: multicluster_link.yaml*
 1454  man grep
 1455  grep -h kubeconfig: multicluster_link.yaml*
 1456  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC1 ; echo ; echo $KC2
 1457  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's/"$KC1"/"$KC2"/g' multicluster_link.yaml
 1458  diff multicluster_link.yaml multicluster_link.yaml.orig
 1459  grep -h kubeconfig: multicluster_link.yaml*
 1460  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's/"$KC1"/"$KC2"/g' multicluster_link.yaml
 1461  grep kubeconfig: multicluster_link.yaml*
 1462  grep -h kubeconfig: multicluster_link.yaml*
 1463  grep -h kubeconfig: multicluster_link.yaml*
 1464  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; echo $KC1 ; echo ; echo $KC2
 1465  rm multicluster_link.yaml*
 1466  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster_link.yaml
 1467  more multicluster_link.yaml
 1468  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s/$KC1/$KC2/g" multicluster_link.yaml
 1469  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s|$KC1|$KC2|g" multicluster_link.yaml
 1470  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s\|$KC1|$KC2|g" multicluster_link.yaml
 1471  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s|$KC1|$KC2|g" multicluster_link.yaml
 1472  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig 's|$KC1|$KC2|g' multicluster_link.yaml
 1473  diff multicluster_link.yaml multicluster_link.yaml.orig
 1474  grep -h kubeconfig: multicluster_link.yaml*
 1475  rm multicluster_link.yaml*
 1476  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster_link.yaml
 1477  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; sed -i .orig "s/$KC1/$KC2/g/" multicluster_link.yaml
 1478  rm multicluster_link.yaml*
 1479  linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false > multicluster-link-orig.yaml
 1480  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; awk -f multicluster-link.yaml "$KC1" "$KC2" multicluster-link-orig.yaml
 1481  vi mc.awk
 1482  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; awk -f mc.awk "$KC1" "$KC2" multicluster-link-orig.yaml
 1483  KC1=`linkerd --context=warehouse multicluster link --cluster-name warehouse --gateway=false | grep kubeconfig: | uniq | awk {'print $2'}` ; KC2=`echo $KC1 | base64 -d | sed 's/0\.0\.0\.0/kubernetes/g' | base64` ; awk -f mc.awk "$KC1" "$KC2" multicluster-link-orig.yaml > multicluster-link.yaml
 1484  diff multicluster-link.yaml multicluster-link-orig.yaml
 1485  kubectl apply -f multicluster-link.yaml --context orders
 1486  cat enable-outbound-metrics.md
 1487  kubectl -n linkerd-buoyant edit cm/buoyant-cloud-metrics
 1488  kubectl -n linkerd-buoyant rollout restart ds buoyant-cloud-metrics
 1489  history 1073 > mc_history.txt
 1490  cat mc_history.txt
 1491  ls -la
 1492  kubectl apply -f policy.yaml --context orders
 1493  kubectl apply -f policy.yaml --context warehouse
 1494  grep policy mc_history.txt
 1495  history 1073 | more
